(window.webpackJsonp=window.webpackJsonp||[]).push([[176],{511:function(t,e,n){"use strict";n.r(e);var r=n(20),s=Object(r.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("p",[t._v("Linux_systemctl/systemd")]),t._v(" "),n("p",[t._v("[toc]")]),t._v(" "),n("h2",{attrs:{id:"参考"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考：")]),t._v(" "),n("ul",[n("li",[t._v("systemctl基本操作命令：https://my.oschina.net/u/3497124/blog/1439293")]),t._v(" "),n("li",[t._v("基本用法： https://linux.cn/article-5926-1.html")]),t._v(" "),n("li",[t._v("配置说明：https://www.cnblogs.com/jym1/p/8072964.html")]),t._v(" "),n("li",[t._v("英文说明：https://www.freedesktop.org/software/systemd/man/systemd.service.html")]),t._v(" "),n("li",[t._v("完整的说明（英文）：https://www.digitalocean.com/community/tutorials/understanding-systemd-units-and-unit-files")]),t._v(" "),n("li",[t._v("systemctl详细介绍：https://blog.csdn.net/shuaixingi/article/details/49641721")]),t._v(" "),n("li",[t._v("关于type的介绍：https://www.cnblogs.com/ccccwork/p/6817009.html")])]),t._v(" "),n("h2",{attrs:{id:"配置参数说明"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#配置参数说明"}},[t._v("#")]),t._v(" 配置参数说明：")]),t._v(" "),n("ul",[n("li",[t._v("symbol “@”\n"),n("ul",[n("li",[t._v("Template and Instance Unit Names")]),t._v(" "),n("li",[t._v("http://superuser.com/questions/393423/the-symbol-and-systemctl-and-vsftpd")]),t._v(" "),n("li",[t._v("使用@可以参数化服务名，当一个服务在一台机器起多个实例，如果不想生成多个服务名，可以通过参数来控制。配置文件里使用%i 代理 服务名@后的内容。如systemctl start "),n("a",{attrs:{href:"https://cloud.tencent.com/product/cdb?from=10680",target:"_blank",rel:"noopener noreferrer"}},[t._v("mysql"),n("OutboundLink")],1),n("a",{attrs:{href:"https://my.oschina.net/u/3691444",target:"_blank",rel:"noopener noreferrer"}},[t._v("@3306"),n("OutboundLink")],1),t._v("，%i为3306")])])]),t._v(" "),n("li",[t._v("[unit]\n"),n("ul",[n("li",[t._v("Description： 服务描述，打印服务的时候显示")]),t._v(" "),n("li",[t._v("After：依赖服务，必须在依赖服务启动后启动\n"),n("ul",[n("li",[t._v("syslog.target, 系统日志服务")]),t._v(" "),n("li",[t._v("network.target，网络服务")])])])])]),t._v(" "),n("li",[t._v("[service]\n"),n("ul",[n("li",[t._v("User: 启动用户（常用simple和forking）")]),t._v(" "),n("li",[t._v("Group: 启动的用户组")]),t._v(" "),n("li",[t._v("type：启动类型，\n"),n("ul",[n("li",[t._v("Type=oneshot ：这一选项适用于只执行一项任务、随后立即退出的服务。可能需要同时设置 RemainAfterExit=yes 使得 systemd 在服务进程退出之后仍然认为服务处于激活状态。")]),t._v(" "),n("li",[t._v("Type=notify ：与 Type=simple 相同，但约定服务会在就绪后向 systemd 发送一个信号。这一通知的实现由 libsystemd-daemon.so 提供。")]),t._v(" "),n("li",[t._v("Type=dbus ：若以此方式启动，当指定的 BusName 出现在DBus系统总线上时，systemd认为服务就绪。")]),t._v(" "),n("li",[t._v("Type=idle ：systemd会等待所有任务处理完成后，才开始执行 idle 类型的单元。其他行为与 Type=simple 类似。")]),t._v(" "),n("li",[t._v("Type=forking ：systemd认为当该服务进程fork，且父进程退出后服务启动成功。对于常规的守护进程（daemon），除非你确定此启动方式无法满足需求，使用此类型启动即可。使用此启动类型应同时指定 PIDFile=，以便 systemd 能够跟踪服务的主进程。")]),t._v(" "),n("li",[t._v("Type=simple ：（默认值） systemd认为该服务将立即启动。服务进程不会 fork 。如果该服务要启动其他服务，不要使用此类型启动，除非该服务是socket 激活型。")])])]),t._v(" "),n("li",[t._v("ExecStart：启动方式")]),t._v(" "),n("li",[t._v("ExecStop：停止方式")]),t._v(" "),n("li",[t._v("PIDFILE: 指定pid文件，监控进程状态，type=forking时，必须指定")]),t._v(" "),n("li",[t._v("Restart：重启条件，\n"),n("ul",[n("li",[t._v("always始终重启，即使是systemctl stop关掉了，也会重启")]),t._v(" "),n("li",[t._v("on-success，成功退出时")]),t._v(" "),n("li",[t._v("on-failure，进程退出状态不正常，默认为0，可以使用SuccessExitStatus指定")]),t._v(" "),n("li",[t._v("on-abnormal，进程超时，用户取消，watchdog")]),t._v(" "),n("li",[t._v("on-watchdog，watchdog关掉进程时")]),t._v(" "),n("li",[t._v("on-abort，用户取消")]),t._v(" "),n("li",[t._v("no, 不重启，默认值")])])]),t._v(" "),n("li",[t._v("PrivateTmp：为进程分配单独的临时空间")])])]),t._v(" "),n("li",[t._v("LimitCPU/LimitNOFILE/LimitNPROC：\n"),n("ul",[n("li",[t._v("LimitCPU：限制系统CPU资源使用量；")]),t._v(" "),n("li",[t._v("LimitNOFILE：限制文件句柄资源使用量；")]),t._v(" "),n("li",[t._v("LimitNPROC：限制子进程数量")])])]),t._v(" "),n("li",[t._v("Install\n"),n("ul",[n("li",[t._v("WantedBy：当前服务的加载方式")])])]),t._v(" "),n("li",[t._v("注意事项：\n"),n("ul",[n("li",[t._v("在“.service”文件中使用命令的绝对路径")]),t._v(" "),n("li",[t._v("当服务有特定的运行用户、运行环境是需要指定：user、group、environmentfile")]),t._v(" "),n("li",[t._v("根据服务的特点调整参数的使用")])])])]),t._v(" "),n("h2",{attrs:{id:"应用实例"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#应用实例"}},[t._v("#")]),t._v(" 应用实例")]),t._v(" "),n("p",[n("strong",[t._v("注意事项：")])]),t._v(" "),n("ul",[n("li",[t._v("在“.service”文件中使用命令的绝对路径")]),t._v(" "),n("li",[t._v("当服务有特定的运行用户、运行环境是需要指定：user、group、environmentfile")]),t._v(" "),n("li",[t._v("根据服务的特点调整参数的使用")])]),t._v(" "),n("h3",{attrs:{id:"_1-systemctl添加mysql服务-管理多实例"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-systemctl添加mysql服务-管理多实例"}},[t._v("#")]),t._v(' 1. systemctl添加mysql服务 "@"管理多实例')]),t._v(" "),n("p",[t._v("该脚本使用于启动多个mysql实例的环境，如果想管理单个MySQL进程，只需要将“%i”换成具体的参数就好（mysql单实例管理可参考："),n("a",{attrs:{href:"http://blog.csdn.net/shen2308/article/details/78492460%EF%BC%89%E3%80%82",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://blog.csdn.net/shen2308/article/details/78492460）。"),n("OutboundLink")],1)]),t._v(" "),n("p",[t._v("[Unit]\nDescription=MySQL Multi Server for instance %i\nAfter=syslog.target\nAfter=network.target")]),t._v(" "),n("p",[t._v("[Service]\nUser=mysql\nGroup=mysql\nType=forking\nExecStart=/usr/bin/mysqld_multi start %i\nExecStop=/usr/bin/mysqld_multi stop %i\nRestart=always\nPrivateTmp=true")]),t._v(" "),n("p",[t._v("[Install]\nWantedBy=multi-user.target")]),t._v(" "),n("p",[t._v("#管理命令\nsystemctl start/stop/status/restart mysql@3306.service")]),t._v(" "),n("h3",{attrs:{id:"_2-systemctl添加tomcat服务"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-systemctl添加tomcat服务"}},[t._v("#")]),t._v(" 2. systemctl添加tomcat服务")]),t._v(" "),n("p",[t._v("[Unit]"),n("br"),t._v("\nDescription=Tomcat of rapapi\nAfter=syslog.target network.target")]),t._v(" "),n("p",[t._v("[Service]\n#指定用户\nUser=root\nGroup=root\nType=forking\n#因为tomcat使用信号管理进程，所以需要指定pid文件\nPIDFile=/usr/share/apache-tomcat-7.0.72/tomcat.pid"),n("br"),t._v("\nExecStart=/usr/share/apache-tomcat-7.0.72/bin/startup.sh"),n("br"),t._v("\nExecReload=/bin/kill -s HUP $MAINPID"),n("br"),t._v("\nExecStop=/bin/kill -s QUIT $MAINPID"),n("br"),t._v("\nPrivateTmp=true"),n("br"),t._v("\nRestart=on-failure\nRestartSec=10")]),t._v(" "),n("p",[t._v("[Install]"),n("br"),t._v("\nWantedBy=multi-user.target")]),t._v(" "),n("p",[n("strong",[t._v("管理命令：")]),t._v(" systemctl start/stop/status/restart ProcessName.service")]),t._v(" "),n("h3",{attrs:{id:"_3-systemctl添加jenkins服务"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-systemctl添加jenkins服务"}},[t._v("#")]),t._v(" 3. systemctl添加jenkins服务")]),t._v(" "),n("p",[t._v("[Unit]\nDescription=Jenkins Control With Resin\nAfter=syslog.target\nAfter=network.target")]),t._v(" "),n("p",[t._v("[Service]\nUser=root\nGroup=root\nExecStart=/bin/bash /root/resin-3.1.12/bin/httpd.sh\nRestart=on-failure\nRestartSec=10\n[Install]\nWantedBy=multi-user.target")]),t._v(" "),n("h3",{attrs:{id:"_4-systemctl添加redmine服务"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-systemctl添加redmine服务"}},[t._v("#")]),t._v(" 4. systemctl添加redmine服务")]),t._v(" "),n("p",[t._v("[Unit]\nDescription=Redmine Control\nAfter=syslog.target\nAfter=network.target")]),t._v(" "),n("p",[t._v("[Service]\nUser=redmine\nGroup=redmine\n#指定虚拟环境文件\nEnvironmentFile=-/home/redmine/redmine-2.5.1/rails.env\nWorkingDirectory=/home/redmine/redmine-2.5.1\nExecStart=/usr/local/rvm/src/rvm/rubies/ruby-2.0.0-p648/bin/ruby /home/redmine/redmine-2.5.1/script/rails server webrick -e production -p 4000")]),t._v(" "),n("p",[t._v("Restart=on-failure\nRestartSec=10")]),t._v(" "),n("p",[t._v("[Install]\nWantedBy=multi-user.target")]),t._v(" "),n("h3",{attrs:{id:"_5-systemctl添加falcon服务"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-systemctl添加falcon服务"}},[t._v("#")]),t._v(" 5. systemctl添加falcon服务")]),t._v(" "),n("p",[t._v("[Unit]\nDescription=Open Falcon Agent Service\nAfter=network.target")]),t._v(" "),n("p",[t._v("[Service]\nWorkingDirectory=/home/falcon/agent\nExecStart=/home/falcon/agent/falcon-agent -c /home/falcon/agent/cfg.json >> /dev/null 2>&1\nStandardOutput=null")]),t._v(" "),n("p",[t._v("Restart=on-failure\nRestartSec=15")]),t._v(" "),n("p",[t._v("[Install]\nWantedBy=multi-user.target")]),t._v(" "),n("h3",{attrs:{id:"_6-systemd管理node项目"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-systemd管理node项目"}},[t._v("#")]),t._v(" 6. systemd管理node项目")]),t._v(" "),n("p",[t._v("[Unit]\nDescription=Cynpmjs Manage\nAfter=network.target")]),t._v(" "),n("p",[t._v("[Service]\nUser=cynpm\nGroup=cynpm\nEnvironment=PATH=/usr/bin:/usr/local/bin:/home/cynpm/.nvm/versions/node/v6.11.5/bin\nWorkingDirectory=/home/cynpm/workspace/cynpm/cynpmjs\nExecStart=/home/cynpm/.nvm/versions/node/v6.11.5/bin/node /home/cynpm/workspace/cynpm/cynpmjs/dispatch.js\nRestart=on-failure\nRestartSec=60")]),t._v(" "),n("p",[t._v("[Install]\nWantedBy=multi-user.target")]),t._v(" "),n("p",[n("strong",[t._v("参考：")]),t._v(" http://www.ruanyifeng.com/blog/2016/03/node-systemd-tutorial.html")]),t._v(" "),n("h3",{attrs:{id:"_7-systemd管理redis"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_7-systemd管理redis"}},[t._v("#")]),t._v(" 7. systemd管理"),n("a",{attrs:{href:"https://cloud.tencent.com/product/crs?from=10680",target:"_blank",rel:"noopener noreferrer"}},[t._v("Redis"),n("OutboundLink")],1)]),t._v(" "),n("p",[t._v("[Unit]\nDescription=test_redis redis server service\nAfter=network.target")]),t._v(" "),n("p",[t._v("[Service]\nKillMode=control-group\nExecStop=/bin/kill -SIGTERM $MAINPID\nType=forking\nPIDFile=/home/adai/redis/6601/redis_6601.pid\nWorkingDirectory=/home/adai/redis\nExecStart=/usr/bin/redis-server /home/adai/redis/test_redis_6601.conf\nRestart=on-failure\nRestartSec=300\nUser=adai\nGroup=adai\n# 最大5000个连接数\nLimitNOFILE=5032\n[Install]\nWantedBy=multi-user.target")]),t._v(" "),n("h3",{attrs:{id:"rsync配置文件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#rsync配置文件"}},[t._v("#")]),t._v(" rsync配置文件")]),t._v(" "),n("p",[t._v("# /etc/rsyncd: configuration file for rsync daemon mode")]),t._v(" "),n("p",[t._v("# See rsyncd.conf man page for more options.")]),t._v(" "),n("p",[t._v("# configuration example:")]),t._v(" "),n("p",[t._v("# uid = nobody\n# gid = nobody\n# use chroot = yes\n# max connections = 4\n# pid file = /var/run/rsyncd.pid\n# exclude = lost+found/\n# transfer logging = yes\n# timeout = 900\n# ignore nonreadable = yes\n# dont compress   = *.gz *.tgz *.zip *.z *.Z *.rpm *.deb *.bz2")]),t._v(" "),n("p",[t._v("# [ftp]\n#        path = /home/ftp\n#        comment = ftp export area")]),t._v(" "),n("p",[t._v("uid = nobody\ngid = nobody\nuse chroot = no\nmax connections = 200\ntimeout = 300\npid file = /var/run/rsyncd.pid\nlock file = /var/run/rsyncd.lock\nlog file = /var/log/rsyncd.log\n[m_log]\npath=/data/logs/\nignore erros\nread only = false\nlist = false\nhosts allow=10.9.12.2\nhosts deny=*")]),t._v(" "),n("p",[t._v("说明：rsync服务只对指定ip开放连接权限，提升服务的安全性！！！")]),t._v(" "),n("p",[t._v("(adsbygoogle = window.adsbygoogle || []).push({});")]),t._v(" "),n("p",[t._v("本文参与"),n("a",{attrs:{href:"https://cloud.tencent.com/developer/support-plan",target:"_blank",rel:"noopener noreferrer"}},[t._v("腾讯云自媒体分享计划"),n("OutboundLink")],1),t._v("，欢迎正在阅读的你也加入，一起分享。")])])}),[],!1,null,null,null);e.default=s.exports}}]);
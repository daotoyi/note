(window.webpackJsonp=window.webpackJsonp||[]).push([[143],{688:function(a,s,n){"use strict";n.r(s);var t=n(20),e=Object(t.a)({},(function(){var a=this,s=a.$createElement,n=a._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[n("p",[n("strong",[a._v("作者：杨周")])]),a._v(" "),n("p",[n("strong",[a._v("译者：大江狗")])]),a._v(" "),n("p",[n("strong",[a._v("原文：7 Levels of Using F-Strings in Python | by Yang Zhou")]),a._v(" "),n("a",{attrs:{href:"https://mp.weixin.qq.com/s/n9fWKNDZBVtVZWVY0Af0kg",target:"_blank",rel:"noopener noreferrer"}},[a._v("VX公众号文章"),n("OutboundLink")],1)]),a._v(" "),n("p",[a._v("f-string是Python 3.6推出的一种简单而不同的字符串格式技术，可以优雅地表达Python字符串。除非您仍在使用旧的 Python 版本，否则在格式化字符串时，f 字符串绝对应该是您的首选。因为它可以通过一个迷你语法满足您的所有要求，甚至运行字符串的表达式。本文将深入探讨这项技术从初级到深度的7个层次。在了解它们之后，您可能会成为字符串格式化大师。")]),a._v(" "),n("h1",{attrs:{id:"_1-轻松从变量显示值"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-轻松从变量显示值"}},[a._v("#")]),a._v(" "),n("strong",[a._v("1. 轻松从变量显示值")])]),a._v(" "),n("p",[a._v("使用 f 字符串只需要做两件事：")]),a._v(" "),n("ul",[n("li",[a._v("在字符串前添加一个小写的f;")]),a._v(" "),n("li",[a._v("使用f字符串中以{variable_name}插值变量.")])]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("name = 'Yang'\ntitle = 'full stack hacker'\nprint(f'{name} is a {title}.')\n# Yang is a full stack hacker.\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br")])]),n("p",[a._v("如上所示，在 f 字符串机制的帮助下，我们可以编写简单且更少的代码，以便在字符串中显示更多代码。它完美地呼应了 Python 的禅宗。")]),a._v(" "),n("blockquote",[n("p",[a._v('"简单总比复杂好。')])]),a._v(" "),n("h1",{attrs:{id:"_2-数字格式化"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-数字格式化"}},[a._v("#")]),a._v(" "),n("strong",[a._v("2. 数字格式化")])]),a._v(" "),n("p",[a._v('有时仅仅显示原始值可能无法满足我们的需求，但是直接修改原始变量通常不是个好主意，因为变量可能在其他地方使用。不用担心，Python f字符串还支持"格式规范迷你语言"，它使我们能够根据自己喜欢的方式在 f 字符串中格式化值，尤其是数字。')]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("pi = 3.1415926\nprint(f'Pi is approximately equal to {pi:.2f}')\n# Pi is approximately equal to 3.14\n\nid = 1  # need to print a 3-digit number\nprint(f\"The id is {id:03d}\")\n# The id is 001\n\nN = 1000000000  # need to add separator\nprint(f'His networth is ${N:,d}')\n# His networth is $1,000,000,000\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br"),n("span",{staticClass:"line-number"},[a._v("10")]),n("br"),n("span",{staticClass:"line-number"},[a._v("11")]),n("br")])]),n("p",[a._v("以上示例仅显示了冰山一角。对于格式规格语法的完整列表，相应的官方文档是您最好的朋友。")]),a._v(" "),n("h1",{attrs:{id:"_3-正确打印特殊字符"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-正确打印特殊字符"}},[a._v("#")]),a._v(" "),n("strong",[a._v("3. 正确打印特殊字符")])]),a._v(" "),n("p",[a._v("我们可以通过 f 字符串打印这些字符或其他特殊字符吗？比如''和{}。是的，当然。但语法有点棘手。让我们来看看。")]),a._v(" "),n("h2",{attrs:{id:"_3-1-打印引号"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-打印引号"}},[a._v("#")]),a._v(" 3.1 打印引号")]),a._v(" "),n("p",[a._v("正如我们所知，反斜线\\是常用的转义字符，用于调用对其以下字符的替代解释。对于 f 字符串，我们需要注意一条规则：\\在 f 字符串表达式的括号{}中不起作用。")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("name = 'Yang'\n# Correct Way:\nprint(f'\\'{name}\\' is a full stack hacker.')\n# 'Yang' is a full stack hacker.\n\n# 错误方式:\nprint(f'{\\'name\\'} is a full stack hacker.')\n# SyntaxError: f-string expression part cannot include a backslash\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br")])]),n("h2",{attrs:{id:"_3-2-打印双括号"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-打印双括号"}},[a._v("#")]),a._v(" 3.2 打印双括号{}")]),a._v(" "),n("p",[a._v("用 f字符串打印{}的方法是不同的, 非常容易出bug。这次我们不能使用反斜线。")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("name = 'Yang'\n\n\nname = 'Yang'\n\n# 1\nprint(f'{name} is a full stack hacker.')\n# 'Yang' is a full stack hacker.\n\n# 2\nprint(f'{{name}} is a full stack hacker.')\n# {name} is a full stack hacker.\n\n# 3\nprint(f'{{{name}}} is a full stack hacker.')\n# {Yang} is a full stack hacker.\n\n# 4\nprint(f'{{{{name}}}} is a full stack hacker.')\n# {{name}} is a full stack hacker.\n\n# 5\nprint(f'{{{{{name}}}}} is a full stack hacker.')\n# {{Yang}} is a full stack hacker.\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br"),n("span",{staticClass:"line-number"},[a._v("10")]),n("br"),n("span",{staticClass:"line-number"},[a._v("11")]),n("br"),n("span",{staticClass:"line-number"},[a._v("12")]),n("br"),n("span",{staticClass:"line-number"},[a._v("13")]),n("br"),n("span",{staticClass:"line-number"},[a._v("14")]),n("br"),n("span",{staticClass:"line-number"},[a._v("15")]),n("br"),n("span",{staticClass:"line-number"},[a._v("16")]),n("br"),n("span",{staticClass:"line-number"},[a._v("17")]),n("br"),n("span",{staticClass:"line-number"},[a._v("18")]),n("br"),n("span",{staticClass:"line-number"},[a._v("19")]),n("br"),n("span",{staticClass:"line-number"},[a._v("20")]),n("br"),n("span",{staticClass:"line-number"},[a._v("21")]),n("br"),n("span",{staticClass:"line-number"},[a._v("22")]),n("br"),n("span",{staticClass:"line-number"},[a._v("23")]),n("br"),n("span",{staticClass:"line-number"},[a._v("24")]),n("br")])]),n("p",[a._v("如上例所示，该变量是作为f-字符串的括号还是变量处理取决于其周围的括号数。如果您不知道这种奇怪的机制，则容易出现错误。")]),a._v(" "),n("h2",{attrs:{id:"_3-3-打印反斜线"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-打印反斜线"}},[a._v("#")]),a._v(" 3.3 打印反斜线\\")]),a._v(" "),n("p",[a._v("打印反斜线\\很简单：只需使用双反斜线打印。但是不要将它们添加到 f 字符串表达式括号当中。")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("name = 'Yang'\n\nprint(f'\\\\{name}\\\\ is a full \\\\stack hacker.')\n# \\Yang\\ is a full \\stack hacker.\n\n#错误的\nprint(f'{\\\\name\\\\} is a full \\\\stack hacker.')\n# SyntaxError: f-string expression part cannot include a backslash\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br")])]),n("h1",{attrs:{id:"_4-小心打印字典值"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-小心打印字典值"}},[a._v("#")]),a._v(" "),n("strong",[a._v("4. 小心打印字典值")])]),a._v(" "),n("p",[a._v("将字典的值应用到 f 字符串中也容易出现错误。我们必须使用不同的引号来描述字典键和 f 字符串，如下所示。如果f字符串用双引号表示，那么变量里的字典键必须用单引号。")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("Hacker = {'name': 'Yang'}\n\nprint(f\"{Hacker['name']} is a hacker\")\n# Yang is a hacker\nprint(f'{Hacker[\"name\"]} is a hacker')\n# Yang is a hacker\nprint(f'{Hacker['name']} is a hacker')\n# 语法错误 SyntaxError: invalid syntax\nprint(f\"{Hacker[\"name\"]} is a hacker\")\n# 语法错误 SyntaxError: invalid syntax\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br"),n("span",{staticClass:"line-number"},[a._v("10")]),n("br")])]),n("p",[a._v("如上所示，如果我们对键名和 f 字符串都使用相同的单引号或双引号, Python 会对我们的代码感到困惑, 从而报错。")]),a._v(" "),n("h1",{attrs:{id:"_5-正确处理多行-f-字符串"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-正确处理多行-f-字符串"}},[a._v("#")]),a._v(" "),n("strong",[a._v("5. 正确处理多行 F 字符串")])]),a._v(" "),n("p",[a._v("为了使我们的代码更易读，有必要使用多行书写一长串字符。但如果是 f 字符串，不要忘记在每行之前添加f。")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v('ame = \'Yang\'\n\n\name = \'Yang\'\n\n# 错误方式\nprint(f"{name} is a hacker."\n      "{name} is also a top writer."\n      "{name} writes on Medium."\n      )\n# Yang is a hacker.{name} is also a top writer.{name} writes on Medium.\n\n# 正确方式\nprint(f"{name} is a hacker."\n      f"{name} is also a top writer."\n      f"{name} writes on Medium."\n      )\n# Yang is a hacker.Yang is also a top writer.Yang writes on Medium.\n')])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br"),n("span",{staticClass:"line-number"},[a._v("10")]),n("br"),n("span",{staticClass:"line-number"},[a._v("11")]),n("br"),n("span",{staticClass:"line-number"},[a._v("12")]),n("br"),n("span",{staticClass:"line-number"},[a._v("13")]),n("br"),n("span",{staticClass:"line-number"},[a._v("14")]),n("br"),n("span",{staticClass:"line-number"},[a._v("15")]),n("br"),n("span",{staticClass:"line-number"},[a._v("16")]),n("br"),n("span",{staticClass:"line-number"},[a._v("17")]),n("br"),n("span",{staticClass:"line-number"},[a._v("18")]),n("br")])]),n("h1",{attrs:{id:"_6-像大师一样显示日期和时间"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-像大师一样显示日期和时间"}},[a._v("#")]),a._v(" "),n("strong",[a._v("6. 像大师一样显示日期和时间")])]),a._v(" "),n("p",[a._v("如果我们需要打印日期或时间，f 字符串将再次告诉我们它是多么方便:")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v('from datetime import datetime\ntoday = datetime.today()\nprint(f"Today is {today}")\n# Today is 2021-07-31 18:20:48.956829\nprint(f"Today is {today:%B %d, %Y}")\n# Today is July 31, 2021\nprint(f"Today is {today:%m-%d-%Y}")\n# Today is 07-31-2021\n')])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br")])]),n("p",[a._v("如上例所示，在 f 字符串的帮助下，我们可以使用我们任何喜欢的格式打印日期或时间。")]),a._v(" "),n("h1",{attrs:{id:"_7-评估-f-字符串内的表达式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_7-评估-f-字符串内的表达式"}},[a._v("#")]),a._v(" "),n("strong",[a._v("7. 评估 F 字符串内的表达式")])]),a._v(" "),n("p",[a._v("当我第一次知道 f 字符串时， 我简直不敢相信：我们可以在 f 字符串内运行 Python 表达式。如果是真的，还算是字符串吗？")]),a._v(" "),n("p",[a._v("我仔细阅读了 PEP 498，终于明白了：")]),a._v(" "),n("blockquote",[n("p",[a._v("F 字符串提供了一种将表达式嵌入字符串字面的方法。需要注意的是，f 字符串实际上是在运行时间评估的表达方式，而不是恒定的值。")])]),a._v(" "),n("p",[a._v("因此，f 字符串与普通字符串不同，此功能赋予它更大的能力。例如，我们可以在它里面运行一个显示时间的功能。")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v('from datetime import datetime\n\nprint(f"Today is {datetime.today()}")\n# Today is 2021-07-31 18:20:48.956829\n')])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br")])]),n("p",[a._v("Python 中的 f-string是一个伟大的字符串格式化技术， 显示了 Python 是多么优雅。它非常强大，因为它不是一个普通的字符串，而是在运行时可以表达的字符串。对于一些特殊情况，它有特殊的规则，我们需要谨慎使用它。")])])}),[],!1,null,null,null);s.default=e.exports}}]);
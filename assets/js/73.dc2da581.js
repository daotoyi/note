(window.webpackJsonp=window.webpackJsonp||[]).push([[73],{554:function(e,t,s){"use strict";s.r(t);var a=s(20),r=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"python-中有-3-个不可思议的返回功能"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#python-中有-3-个不可思议的返回功能"}},[e._v("#")]),e._v(" Python 中有 3 个不可思议的返回功能")]),e._v(" "),s("blockquote",[s("h2",{attrs:{id:"excerpt"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#excerpt"}},[e._v("#")]),e._v(" Excerpt")]),e._v(" "),s("p",[e._v("今天给大家分享 3 个比较冷门的知识")])]),e._v(" "),s("hr"),e._v(" "),s("p",[e._v("今天给大家分享 3 个比较冷门的知识")]),e._v(" "),s("h2",{attrs:{id:"第一个-神奇的字典键"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第一个-神奇的字典键"}},[e._v("#")]),e._v(" 第一个：神奇的字典键")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('some_dict = {}some_dict[5.5] = "Ruby"some_dict[5.0] = "JavaScript"some_dict[5] = "Python"\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("Output:")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('>>> some_dict[5.5]"Ruby">>> some_dict[5.0]"Python">>> some_dict[5]"Python"\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v('"Python" 消除了 "JavaScript" 的存在？')]),e._v(" "),s("h4",{attrs:{id:"💡-说明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#💡-说明"}},[e._v("#")]),e._v(" 💡 说明:")]),e._v(" "),s("ul",[s("li",[s("p",[e._v("Python 字典通过检查键值是否相等和比较哈希值来确定两个键是否相同.")])]),e._v(" "),s("li",[s("p",[e._v("具有相同值的不可变对象在Python中始终具有相同的哈希值.")])])]),e._v(" "),s("p",[e._v("注意: 具有不同值的对象也可能具有相同的哈希值（哈希冲突）.")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v(">>> 5 == 5.0True>>> hash(5) == hash(5.0)True\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("当执行 "),s("code",[e._v('some_dict[5] = "Python"')]),e._v(" 语句时, 因为Python将 "),s("code",[e._v("5")]),e._v(" 和 "),s("code",[e._v("5.0")]),e._v(" 识别为 "),s("code",[e._v("some_dict")]),e._v(' 的同一个键, 所以已有值 "JavaScript" 就被 "Python" 覆盖了')]),e._v(" "),s("h2",{attrs:{id:"第二个-异常处理中的return"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第二个-异常处理中的return"}},[e._v("#")]),e._v(" 第二个：异常处理中的return")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("def some_func():    try:        return 'from_try'    finally:        return 'from_finally'\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("Output:")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v(">>> some_func()'from_finally'\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("h4",{attrs:{id:"💡-说明-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#💡-说明-2"}},[e._v("#")]),e._v(" 💡 说明:")]),e._v(" "),s("ul",[s("li",[s("p",[e._v('当在 "try…finally" 语句的 '),s("code",[e._v("try")]),e._v(" 中执行 "),s("code",[e._v("return")]),e._v(", "),s("code",[e._v("break")]),e._v(" 或 "),s("code",[e._v("continue")]),e._v(" 后, "),s("code",[e._v("finally")]),e._v(" 子句依然会执行.")])]),e._v(" "),s("li",[s("p",[e._v("函数的返回值由最后执行的 "),s("code",[e._v("return")]),e._v(" 语句决定. 由于 "),s("code",[e._v("finally")]),e._v(" 子句一定会执行, 所以 "),s("code",[e._v("finally")]),e._v(" 子句中的 "),s("code",[e._v("return")]),e._v(" 将始终是最后执行的语句.")])])]),e._v(" "),s("h2",{attrs:{id:"第三个-相同对象的判断"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第三个-相同对象的判断"}},[e._v("#")]),e._v(" 第三个：相同对象的判断")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("class WTF:  pass\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("Output:")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v(">>> WTF() == WTF() # 两个不同的对象应该不相等False>>> WTF() is WTF() # 也不相同False>>> hash(WTF()) == hash(WTF()) # 哈希值也应该不同True>>> id(WTF()) == id(WTF())True\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("h4",{attrs:{id:"💡-说明-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#💡-说明-3"}},[e._v("#")]),e._v(" 💡 说明:")]),e._v(" "),s("ul",[s("li",[s("p",[e._v("当调用 "),s("code",[e._v("id")]),e._v(" 函数时, Python 创建了一个 "),s("code",[e._v("WTF")]),e._v(" 类的对象并传给 "),s("code",[e._v("id")]),e._v(" 函数. 然后 "),s("code",[e._v("id")]),e._v(" 函数获取其id值 (也就是内存地址), 然后丢弃该对象. 该对象就被销毁了.")])]),e._v(" "),s("li",[s("p",[e._v("当我们连续两次进行这个操作时, Python会将相同的内存地址分配给第二个对象. 因为 (在CPython中) "),s("code",[e._v("id")]),e._v(" 函数使用对象的内存地址作为对象的id值, 所以两个对象的id值是相同的.")])]),e._v(" "),s("li",[s("p",[e._v("综上, 对象的id值仅仅在对象的生命周期内唯一. 在对象被销毁之后, 或被创建之前, 其他对象可以具有相同的id值.")])]),e._v(" "),s("li",[s("p",[e._v("那为什么 "),s("code",[e._v("is")]),e._v(" 操作的结果为 "),s("code",[e._v("False")]),e._v(" 呢? 让我们看看这段代码.")])])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('class WTF(object):  def __init__(self): print("I")  def __del__(self): print("D")\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("Output:")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v(">>> WTF() is WTF()IIDDFalse>>> id(WTF()) == id(WTF())IDIDTrue\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("正如你所看到的, 对象销毁的顺序是造成所有不同之处的原因.")]),e._v(" "),s("p",[e._v("原文链接："),s("a",{attrs:{href:"https://github.com/leisurelicht/wtfpython-cn",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/leisurelicht/wtfpython-cn"),s("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=r.exports}}]);